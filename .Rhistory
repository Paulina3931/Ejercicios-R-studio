Padron_web <- read_csv("Padron_web.csv")
View(Padron_web)
library(readr)
Padron_web <- read_csv("Padron_web.csv")
View(Padron_web)
?RDta
library(haven)
PRONIED_CENSO_2019 <- read_dta("PRONIED_CENSO_2019.dta")
View(PRONIED_CENSO_2019)
?seq
seq(0, 0.3, by=0.001) -> s1
s1
?pt
?qf
2*pt(-2.43, df = 13)
qf(0.99, 2, 7)
?pz
?pnorm
?t.test.formula
?t.test
potencia <- function(s1) {pnorm(s1*sqrt(0.5*0.5*2000)-1.645)}
?pnorm
potencia <- function(s1) {qnorm(s1*sqrt(0.5*0.5*2000)-1.645)}
potencia
y1 <- c(1:20)
y2 <- c(5:30)
DosMuestras <- function(y1, y2) {
n1 <- length(y1); n2 <- length(y2)
yb1 <- mean(y1); yb2 <- mean(y2)
s1 <- var(y1); s2 <- var(y2)
s <- ((n1-1)*s1 + (n2-1)*s2)/(n1+n2-2)
tst <- (yb1 - yb2)/sqrt(s2*(1/n1 + 1/n2))
tst
}
tst
DosMuestras
potencia(s1)
potencia <- pnorm(s1*sqrt(0.5*0.5*2000)-1.645, mean=0, sd= 1)
potencia
potencia <- qnorm(s1*sqrt(0.5*0.5*2000)-1.645, mean=0, sd= 1)
s2 <-
potencia <- qnorm(s1*sqrt(0.5*0.5*2000)-1.645, mean=0, sd= 1)
s2 <-s1*sqrt(0.5*0.5*2000)-1.645
potencia <- qnorm(s2, mean=0, sd= 1)
potencia <- qnorm(s1*sqrt(0.5*0.5*2000)-1.645)
potencia <- pnorm(s1*sqrt(0.5*0.5*2000)-1.645, mean= 0, sd= 1)
s2 <-s1*sqrt(0.5*0.5*2000)-1.645
s2
potencia <- qnorm(s2, mean= 0, sd= 1); ; ind <- is.na(potencia)
potencia <- qnorm(s2, mean= 0, sd= 1);ind <- is.na(potencia)
potencia <- function(s1) {qnorm(s1*sqrt(0.5*0.5*2000)-1.645)}
potencia(s1)
potencia <- function(s1) {qnorm(s1*sqrt(0.5*0.5*2000)-1.645, mean=0, sd= 1)}
potencia(s1)
s2 <- s1*sqrt(0.5*0.5*2000)-1.645
s2
potencia(s1)
potencia(s1) ->p
p[is.na(p)] <- 0
p
quantile(p, c(.25))
potencia(s1) ->p
p[is.na(p)] <- 0
p
plot(s1, p)
potencia <- function(s1) {pnorm(s2, mean=0, sd= 1)}
?norm
s2 <- s1*sqrt(0.5*0.5*2000)-1.645
s2
potencia(s1) ->p
#Reemplazamos na por 0
p[is.na(p)] <- 0
p
quantile(p, c(.25))
plot(s1, p)
plot(s1, p)
potencia <- function(s1) {qnorm(s2, mean=0, sd= 1)}
?norm
s2 <- s1*sqrt(0.5*0.5*2000)-1.645
s2
potencia(s1) ->p
#Reemplazamos na por 0
p[is.na(p)] <- 0
p
potencia <- function(s1) {qnorm(s2, mean=0, sd= 1)}
?norm
s2 <- s1*sqrt(0.5*0.5*2000)-1.645
s2
potencia(s1) ->p
#Reemplazamos na por 0
p[is.na(p)] <- 0
p
quantile(p, c(.25))
plot(s1, p)
potencia <- function(s1) {pnorm(s2, mean=0, sd= 1)}
?norm
s2 <- s1*sqrt(0.5*0.5*2000)-1.645
s2
potencia(s1) ->p
#Reemplazamos na por 0
p[is.na(p)] <- 0
p
quantile(p, c(.25))
plot(s1, p)
?qr
c <- c(1:3)
f <- c(1:9)
?runif
if(c= 1) {
if(c = 1) {
if(c=1) {
if(c = 1) {
if(c = 1)
if("c" = 1) {
if(c == 1) {
for (f in 1:3)
{n <- rnorm(3,0,1)
}}else if (c == 2){ for (f in 1:6)
{n <- rnorm(6,0,1)
}} else {for (f in 1:9)
{n <- rnorm(9,0,1)
}}
ifelse (c == 1,for (f in 1:3)
{n <- rnorm(3,0,1)
}, ifelse(c == 2), for (f in 1:6)
{n <- rnorm(6,0,1)
},for (f in 1:9)
{n <- rnorm(9,0,1)
})
ifelse (c == 1, for (f in 1:3)
{n <- rnorm(3,0,1)
}, ifelse(c == 2), for (f in 1:6)
{n <- rnorm(6,0,1)
},for (f in 1:9)
{n <- rnorm(9,0,1)
})
ifelse (c == 1, for (f in 1:3)
n <- rnorm(3,0,1)
, ifelse(c == 2), for (f in 1:6)
n <- rnorm(6,0,1)
,for (f in 1:9)
n <- rnorm(9,0,1)
)
ifelse (c == 1, for (f in 1:3)
n <- runif(3,0,1)
, ifelse(c == 2), for (f in 1:6)
n <- runif(6,0,1)
,for (f in 1:9)
n <- runif(9,0,1)
)
ifelse (c == 1, for (f in 1:3)
{ n1 <- runif(3,0,1)}
, ifelse(c == 2), for (f in 1:6)
{n2 <- runif(6,0,1)}
,for (f in 1:9)
{n3 <- runif(9,0,1)}
)
ifelse (c == 1, for (f in 1:3)
{runif(3,0,1)}
, ifelse(c == 2), for (f in 1:6)
{runif(6,0,1)}
,for (f in 1:9)
{runif(9,0,1)}
)
ifelse (c == 1, runif(3,0,1)
, ifelse(c == 2), runif(6,0,1)
,for (f in 1:9)
runif(9,0,1)
)
ifelse (c == 1, runif(3,0,1)
, ifelse(c == 2), runif(6,0,1)
, runif(9,0,1)
)
for (c in 1:1)
for (f in 1:3){
n1 <- runif(3,0,1)
}}
for (c in 1:1)
for (f in 1:3){
n1 <- runif(3,0,1)
}
for (c in 2:2)
for (f in 1:6){
n1 <- runif(6,0,1)
}
for (c in 3:3)
for (f in 1:9){
n1 <- runif(9,0,1)
}
for (c in 1:1)
for (f in 1:3){
n1 <- runif(3,0,1)
}
for (c in 2:2)
for (f in 1:6){
n2 <- runif(6,0,1)
}
for (c in 3:3)
for (f in 1:9){
n3 <- runif(9,0,1)
}
matriz = []
mimatriz <- NULL
for (c in 1:1)
for (f in 1:3){
mimatriz[f, c] <- runif(3,0,1)
}
[f,c] <- dim(mimatriz)
for (c in 1:1)
for (f in 1:3){
mimatriz[c1] <- runif(3,0,1)
}
for (c in 1:1)
for (f in 1:3){
mimatriz[c] <- runif(3,0,1)
}
for (c in 1:1)
for (f in 1:3){
mimatriz[f] <- runif(3,0,1)
}
for (c in 1:1)
for (f in 1:3){
mimatriz[f] <- runif(3,0,1)
mimatriz [c] <- 1
}
for (c in 2:2)
for (f in 1:6){
mimatriz[f] <- runif(6,0,1)
mimatriz[c] <- 2
}
mimatriz <- matrix(,9,3)
View(mimatriz)
for (c in 1:1)
for (f in 1:3){
mimatriz[f,c] <- runif(3,0,1)
}
for (c in 1:1)
for (f in 1:3){
disp(mimatriz (f,c))
}
for (c in 1:1)
for (f in 1:3){
mimatriz[,c] <-runif(3,0,1)
}
View(mimatriz)
for (c in 2:2)
for (f in 1:6){
mimatriz[,c] <-runif(6,0,1)
}
for (c in 2:2)
for (f in 1:6){
mimatriz[,c] <-runif(6,0,1)
}
for (c in 3:3)
for (f in 1:9){
mimatriz[,c] <-runif(9,0,1)
}
for (c in 2:2)
for (f in 1:6){
mimatriz[,c] <-runif(6,0,1)
}
View(mimatriz)
mimatriz <- matrix(0,9,3)
for (c in 1:1)
for (f in 1:3){
mimatriz[,c] <-runif(3,0,1)
}
for (c in 3:3)
for (f in 1:9){
mimatriz[,c] <-runif(9,0,1)
}
mimatriz <- matrix(0,9,3)
ifelse (c == 1 & f <3,mimatriz[,c] <-runif(3,0,1),0)
while (c == 1 & f <3) {mimatriz[,c] <-runif(3,0,1)}
while (c == 1 & f <3) {mimatriz[5,c] <-runif(3,0,1)}
for (c in 1:1)
for (f in 1:6){
mimatriz[6,c] <-runif(9,0,1)
}
for (c in 1:1)
for (f in 1:6){
mimatriz[6,c] <-runif(6,0,1)
}
for (c in 1:1)
for (f in 1:6){
mimatriz[,c] <-runif(6,0,1)
}
for (c in 1:1)
for (f in 1:3){
mimatriz[,c] <-runif(3,0,1)
}
for (c in 3:3)
for (f in 1:9){
mimatriz[,c] <-runif(9,0,1)
}
ifelse (c == 2 & f <=6, mimatriz[,c] <-runif(6,0,1),0)
ifelse (c == 2 & f <= 6, mimatriz[,c] <-runif(6,0,1),0)
for (f in 1:3){
mimatriz[,1] <-runif(3,0,1)
}
ifelse (f > 3, 0, for (f in 1:3){
mimatriz[,1] <-runif(3,0,1)})
mimatriz <- matrix(0,9,3)
for (f in 1:3){
mimatriz[,1] <-runif(3,0,1)
}
ifelse(f <3,mimatriz[,1] <-runif(3,0,1),0 )
mimatriz <- matrix(0,9,3)
ifelse(f <3,mimatriz[,1] <-runif(3,0,1),0)
ifelse(f <3,mimatriz[,1] <-runif(3,0,1),0)
mimatriz <- matrix(0,9,3)
for (f in 1:3){
mimatriz[,c] <-runif(3,0,1)
}
mimatriz <- matrix(0,9,3)
for (f in 1:3){
mimatriz[,1] <-runif(3,0,1)
}
for (f in 1:9){
mimatriz[,c] <-runif(9,0,1)
}
mimatriz <- matrix(0,9,3)
for (f in 1:3){
mimatriz[,1] <-runif(3,0,1)
}
for (f in 1:9){
mimatriz[,3] <-runif(9,0,1)
}
for (f in 1:6){
mimatriz[,2] <-runif(6,0,1)
}
for (f in 1:3){ ifelse(f<3, mimatriz[,1] <-runif(3,0,1), 0)
}
mimatriz <- matrix(0,9,3)
for (f in 1:3){ ifelse(f<3, mimatriz[,1] <-runif(3,0,1), 0)
}
for (f in 1:6){ ifelse(f<6, mimatriz[,1] <-runif(6,0,1), 0)
}
(mimatriz[f<3,1], mimatriz[,1] <-runif(3,0,1), 0)
ifelse(mimatriz[f,1], mimatriz[,1] <-runif(3,0,1), 0)
mimatriz <- matrix(0,9,3)
mimatriz <- matrix(0,9,3)
mimatriz[1:3,1]<-runif(3,0,1)
for (f in 1:9){
mimatriz[,3] <-runif(9,0,1)
}
mimatriz[1:6,1]<-runif(6,0,1)
mimatriz <- matrix(0,9,3)
mimatriz[1:3,1]<-runif(3,0,1)
for (f in 1:9){
mimatriz[,3] <-runif(9,0,1)
}
mimatriz[1:6,2]<-runif(6,0,1)
mimatriz2 <- matrix(0,9,3)
for (f in 1:9){
mimatriz2[1:3,1] <-runif(3,f-1,f)
}
View(mimatriz2)
mimatriz2 <- matrix(0,9,3)
for (f in 1:3){
mimatriz2[1:3,1] <-runif(3,f-1,f)
}
mimatriz2 <- matrix(0,9,3)
for (f in 1:9){
mimatriz2[1:3,1] <-runif(3,f-1,f)
}
for (f in 1:9){
mimatriz2[1:6,1] <-runif(6,f-1,f)
}
for (f in 1:9){
mimatriz2[1:9,1] <-runif(9,f-1,f)
}
mimatriz2 <- matrix(0,9,3)
for (f in 1:9){
mimatriz2[1:3,1] <-runif(3,f-1,f)
}
for (f in 1:9){
mimatriz2[1:6,1] <-runif(6,f-1,f)
}
for (f in 1:9){
mimatriz2[1:9,1] <-runif(9,f-1,f)
}
mimatriz2 <- matrix(0,9,3)
for (f in 1:9){
mimatriz2[1:3,1] <-runif(3,f-1,f)
}
for (f in 1:9){
mimatriz2[1:6,2] <-runif(6,f-1,f)
}
for (f in 1:9){
mimatriz2[1:9,3] <-runif(9,f-1,f)
}
for (f in 1:3){
mimatriz2[1:3,1] <-runif(3,f-1,f)
}
for (f in 1:6){
mimatriz2[1:6,2] <-runif(6,f-1,f)
}
for (f in 1:9){
mimatriz2[1:9,3] <-runif(9,f-1,f)
}
mimatriz3 <- matrix(0,50,3)
?ppois
ppois(1:10, 5)
?ppois
x <- 1:20
plot(ppois(x, lambda= 1:10), type = "h", lwd = 2,
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(x, lambda= 1:10), type = "h",
main = "Función de masa de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(x, lambda= 1:10), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(x, lambda= c(1,2,5,10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(1:20, lambda= c(1,2,5,10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
ylab = "P(X = x)", xlab = "Número de eventos")
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(1:20, lambda= c(1)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(1:20, lambda= c(1)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(1:20, lambda= c(1,2,5,10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(1:20, lambda= c(1,2,5,10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(1:20, lambda= c(5)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(1:20, lambda= c(5)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
dpois(1:10, 5)
plot(dpois(1:20, lambda= c(1,2,5,10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(ppois(1:20, lambda= c(10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(1:20, lambda= c(10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(1:20, lambda= c(2)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
plot(dpois(1:20, lambda= c(1,2,5,10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
lambda <-1
plot(dpois(1:20, lambda), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#LAMBDA 2
lambda <-2
lines(dpois(1:20, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#LAMBDA 5
lambda <-5
lines(dpois(1:20, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
#LAMBDA 10
lambda <-10
lines(dpois(1:20, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("1", "2", "5", "10"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
plot(dpois(1:20, lambda= c(1,2,5,10)), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#LAMBDA 1
lambda <-1
plot(dpois(1:20, lambda), type = "h", lwd = 2,
main = "Función de distribución de probabilidad",
ylab = "P(X = x)", xlab = "Número de eventos")
#LAMBDA 2
lambda <-2
lines(dpois(1:20, lambda), type = "h", lwd = 2, col = rgb(1,0,0, 0.7))
#LAMBDA 5
lambda <-5
lines(dpois(1:20, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
#LAMBDA 10
lambda <-10
lines(dpois(1:20, lambda), type = "h", lwd = 2, col = rgb(0, 1, 0, 0.7))
# Leyenda
legend("topright", legend = c("1", "2", "5", "10"),
title = expression(lambda), title.adj = 0.75,
lty = 1, col = 1:3, lwd = 2, box.lty = 0)
?weighted.mean
meda_día <- (0*144+1*91+2*32+3*11+4*2)/280
meda_día
a <- c(0,1,2,3,4)
b <- c(144,91,32,11,2)
weighted.mean(b,a)
meda_día <- (0*144+1*91+2*32+3*11+4*2)/4
meda_día
a <- c(0,1,2,3,4)
b <- c(144,91,32,11,2)/280
weighted.mean(b,a)
meda_día <- (0*144+1*91+2*32+3*11+4*2)/280
meda_día
meda_día <- (0*144+1*91+2*32+3*11+4*2)/4
meda_día
meda_día <- (0*144+1*91+2*32+3*11+4*2)/280
meda_día
